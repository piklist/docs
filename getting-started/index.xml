<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Getting Started on Piklist Documentation</title>
    <link>https://piklist.github.io/Piklist-Documentation/getting-started/</link>
    <description>Recent content in Getting Started on Piklist Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://piklist.github.io/Piklist-Documentation/getting-started/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Built-in Demos</title>
      <link>https://piklist.github.io/Piklist-Documentation/getting-started/built-in-demos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://piklist.github.io/Piklist-Documentation/getting-started/built-in-demos/</guid>
      <description>Piklist allows you to work with WordPress like never before. At its basic level, you can easily create metaboxes/metafields (also known as custom fields) for Posts, Pages, media and user profiles, as well as easy Settings pages, Widgets and Dashboard Widgets. You will need to write a little bit of code to use Piklist, but it’s minimal and we’ve included lots of examples. Let’s get started!
 Install Piklist like you would any other Plugin.</description>
    </item>
    
    <item>
      <title>Piklist enable your theme</title>
      <link>https://piklist.github.io/Piklist-Documentation/getting-started/piklist-enable-your-theme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://piklist.github.io/Piklist-Documentation/getting-started/piklist-enable-your-theme/</guid>
      <description>Adding Piklist meta-boxes, fields, settings pages, Widgets, etc. to your theme is very easy.
  First you need to add the proper folder structure to your theme. Piklist works by searching the active theme for the /piklist folder and then processing the sub-folders and files within it.
  Most Piklist code will go in the folder structure you set up. But other Piklist code, like registering Post Types, would go in your theme’s functions.</description>
    </item>
    
    <item>
      <title>Writing a plugin for Piklist</title>
      <link>https://piklist.github.io/Piklist-Documentation/getting-started/writing-a-plugin-for-piklist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://piklist.github.io/Piklist-Documentation/getting-started/writing-a-plugin-for-piklist/</guid>
      <description>Writing a plugin to take advantage of Piklist is very simple. The only additional step is registering your plugin with Piklist, otherwise, this is just like writing a regular WordPress plugin. Like all plugins, Piklist plugins also live in your wp-content/plugins/ folder.
Registering your plugin with Piklist When writing WordPress plugins that rely on other plugins, you usually have to use hooks and filters… but not with Piklist. We’ve simplified the process for you.</description>
    </item>
    
    <item>
      <title>Piklist Add-ons</title>
      <link>https://piklist.github.io/Piklist-Documentation/getting-started/piklist-add-ons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://piklist.github.io/Piklist-Documentation/getting-started/piklist-add-ons/</guid>
      <description>Piklist Add-ons allow you to put a plugin in your theme or Piklist plugin. This allows you to package full featured plugins that are only available when your theme or plugin is active.
A good example of this is the Piklist Demos that come with Piklist itself.
Creating a Piklist add-on is not much different than creating a Piklist plugin. The difference is, the plugin lives in the /add-ons folder in your theme or plugin.</description>
    </item>
    
    <item>
      <title>Piklist checker</title>
      <link>https://piklist.github.io/Piklist-Documentation/getting-started/piklist-checker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://piklist.github.io/Piklist-Documentation/getting-started/piklist-checker/</guid>
      <description>Use the Piklist checker when creating plugins that require Piklist. The Piklist Checker makes it easy for you to notify users from your plugin or theme when Piklist is not active. Since your plugin or theme requires Piklist, not having Piklist installed and activated would provide an unpleasant user experience. Piklist Checker is designed to alleviate that.
If the user attempts to activate a Piklist plugin or theme, without activating Piklist first, they will get a message notifying them the plugin was deactivated and instructions on how to get Piklist.</description>
    </item>
    
  </channel>
</rss>
